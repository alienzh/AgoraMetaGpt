plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
}

Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
properties.load(inputStream)

android {
    compileSdk 31

    defaultConfig {
        applicationId "io.agora.metagpt"
        minSdk 26
        targetSdk 30
        versionCode 401201
        versionName "401.201.220.0901.1"

        flavorDimensions "versionCode"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "APP_ID", "\"${properties.getProperty("APP_ID", "")}\"")
        buildConfigField("String", "APP_CERTIFICATE", "\"${properties.getProperty("APP_CERTIFICATE", "")}\"")
        buildConfigField("boolean", "DEBUG_MENUS", "${properties.getProperty("DEBUG_MENUS", "false")}")

        ndk {
            abiFilters 'arm64-v8a',"armeabi-v7a"
        }
    }
    signingConfigs {
        release {
            keyAlias "key0"
            keyPassword "123456"
            storeFile file('./keystore/testkey.jks')
            storePassword "123456"
        }
    }


    viewBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "Agora-MetaGpt-${versionName}-${variant.buildType.name}-${releaseTime()}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])
    implementation 'io.agora:authentication:1.6.1'
    implementation 'commons-codec:commons-codec:1.10'
    implementation 'io.coil-kt:coil:2.0.0-rc03'
    implementation 'com.afollestad.material-dialogs:core:3.3.0'
    implementation 'com.afollestad.material-dialogs:bottomsheets:3.3.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation "androidx.activity:activity:1.4.0"
    implementation "androidx.fragment:fragment:1.4.1"
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.databinding:databinding-runtime:7.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.4.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.tencent:mmkv:1.2.14'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    implementation 'io.github.h07000223:flycoTabLayout:3.0.0'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    //使用gson解析json
    implementation 'com.google.code.gson:gson:2.8.9'

    // RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.elvishew:xlog:1.10.0'
}

static def releaseTime() {
    return new Date().format("yyyyMMdd_HHmmss")
}